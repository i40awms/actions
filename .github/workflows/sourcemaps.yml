# This is a basic workflow to help you get started with Actions

name: Deploy sourcemaps

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      cache_key:
        description: "Cache key"
        required: true
        type: string
      image_name:
        description: "Repository short name"
        required: true
        type: string
      in_memory:
        description: "Use in-memory docker"
        required: false
        type: boolean
        default: false
      dockerfile:
        description: "Dockerfile path"
        required: false
        type: string
        default: "./docker/dockerfile.production"
      context:
        description: "Build context path"
        required: false
        type: string
        default: "."
      platforms:
        description: "Target platforms"
        required: false
        type: string
        default: "linux/amd64,linux/arm64"
      image_tag:
        description: "Override image tag"
        required: false
        type: string
      trigger_infra:
        description: "Trigger CD"
        required: false
        type: boolean
        default: true
      update_qemu:
        required: false
        type: boolean
        default: false
      build-args:
        required: false
        type: string
        default: ""
    secrets:
      INFRA_TOKEN:
        required: true
      IMG_REGISTRY:
        required: true
      IMG_REGION:
        required: true
      CACHE_BUCKET:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux]

    steps:
      - name: Build sourcemaps
        uses: docker/build-push-action@v3
        with:
          file: ${{ inputs.dockerfile }}
          context: ${{ inputs.context }}
          push: false
          tags: sourcemaps
          cache-from: type=s3,region=${{ secrets.IMG_REGION }},bucket=${{ secrets.CACHE_BUCKET }},name=${{ inputs.cache_key }}
          platforms: linux/amd64
          target: source_map
          build-args: |
            CI_COMMIT_SHA: ${{ github.sha }}

      - name: Publish sourcemaps
        shell: bash
        run: docker run --rm -e ROLLBAR_POST_SERVER_ITEM=${{ secrets.ROLLBAR_POST_SERVER_ITEM }} sourcemaps