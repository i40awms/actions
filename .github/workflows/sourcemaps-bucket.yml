# This is a basic workflow to help you get started with Actions

name: Deploy sourcemaps to s3

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      image_name:
        description: "Cache key"
        required: true
        type: string
      tag:
        description: "Cache key"
        required: true
        type: string
      maps_path:
        description: "Cache key"
        required: true
        type: string
    secrets:
      IMG_REGISTRY:
        required: true
      IMG_REGION:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, ligth]

    steps:
      - name: mount current folder in RAM
        run: sudo mount -t tmpfs -o size=1g tmpfs $(pwd)

      - name: Publish sourcemaps
        shell: bash
        env:
          AWS_REGION: ${{ secrets.IMG_REGION }}
          BUCKET: "sourcemaps.awms.io"
          IMAGE:
        run: |
          CONT_ID=$(docker create ${{ secrets.IMG_REGISTRY }}/${{ inputs.image_name }})
          TAR=$(mktemp -d)
          docker export $CONT_ID | tar -xC $TAR
          docker rm $CONT_ID

          aws --region $AWS_REGION s3 cp \
            --content-type 'application/json' --metadata-directive REPLACE \
            --exclude "*" --include "*.js.map" --recursive \
            $TAR${{ inputs.maps_path }} s3://$BUCKET/${{ inputs.tag }}/${{ github.sha }}   || true

          cd
          rm -rf $TAR

#           find /sourcemaps -name "*.map" -exec sh -c \
#           "sed -i 's/\/\/# sourceMappingURL=/\/\/# sourceMappingURL=https:\/\/sourcemaps.awms.io\/frontend\/$CI_COMMIT_SHA\//g' {}" \;
#           curl --max-time 10 --silent --show-error https://api.rollbar.com/api/1/sourcemap \
#            \
#           -F version=$ROLLBAR_CODE \
#           -F minified_url=http://dynamichost/$url \
#           -F source_map="@$path"

#           curl https://api.rollbar.com/api/1/sourcemap/download
#             -F access_token=$post_server_item \
#             -F version=92429d82a41e930486c6de5ebda9602d55c39986 \
#             -F minified_url=https://example.com/static/js/example.min.js

#           # Use the post_server_time access token, you can
#           # find one in your project access token settings
#           post_server_item=$ROLLBAR_POST_SERVER_ITEM

#           echo "Uploading source maps for version $version!"

#           # We upload a source map for each resulting JavaScript
#           # file; the path depends on your build config
#           for path in $(find /sourcemaps -name "*.map"); do
#               url=$(basename $path .map)
#               echo "Uploading source map for $url, map "

#               curl --max-time 10 --silent --show-error https://api.rollbar.com/api/1/sourcemap \
#                   -F access_token=$post_server_item \
#                   -F version=$ROLLBAR_CODE \
#                   -F minified_url=http://dynamichost/$url \
#                   -F source_map="@$path"
#           done

#         curl https://api.rollbar.com/api/1/sourcemap/download
# -F access_token=aaaabbbbccccddddeeeeffff00001111 \
# -F version=92429d82a41e930486c6de5ebda9602d55c39986 \
# -F minified_url=https://example.com/static/js/example.min.js
